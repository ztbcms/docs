(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{415:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),a("p",[t._v("实现参考"),a("a",{attrs:{href:"https://www.kancloud.cn/manual/thinkphp/1839",target:"_blank",rel:"noopener noreferrer"}},[t._v("『Thikphp 3.2-静态缓存』"),a("OutboundLink")],1),t._v(", 静态缓存只能提供HTML的缓存且只能以文件形式进行缓存。而请求缓存，支持ajax/html的缓存，而且可以根据缓存配置自行切换文件/redis的缓存")]),t._v(" "),a("p",[t._v("缓存检测：")]),t._v(" "),a("p",[t._v("行为"),a("code",[t._v("app_begin")]),t._v("时，检测路由是否需要有缓存，有则返回缓存内容("),a("code",[t._v("\\Common\\Behavior\\ReadRequestCacheBehavior")]),t._v(")")]),t._v(" "),a("p",[t._v("缓存更新:")]),t._v(" "),a("p",[t._v("行为"),a("code",[t._v("ajax_return")]),t._v("/"),a("code",[t._v("view_filter")]),t._v("时，更换请求的缓存内容("),a("code",[t._v("\\Common\\Behavior\\WriteRequestCacheBehavior")]),t._v(")")]),t._v(" "),a("h2",{attrs:{id:"使用指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用指南"}},[t._v("#")]),t._v(" 使用指南")]),t._v(" "),a("h3",{attrs:{id:"_1、开启配置app-application-common-config-php"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、开启配置app-application-common-config-php"}},[t._v("#")]),t._v(" 1、开启配置"),a("code",[t._v("app/Application/Common/config.php")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求缓存")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'REQUEST_CACHE_ON'")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开启静态缓存")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'REQUEST_CACHE_TIME'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局静态缓存有效期（秒）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义静态缓存规则 ['路由规则'  =>  ['expire'=> 10, 'subscribe'=>['路由1','路由2']]],")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'REQUEST_CACHE_RULES'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'content/index/test'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'expire'")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'subscribe'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 依赖test2/test3路由，当test2/test3缓存更新一次后，本路由也需要重新更新缓存")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Content/Index/test2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Content/Index/test3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Content/Index/test2'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'expire'")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'subscribe'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'content/index/test3'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'expire'")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'subscribe'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Content/Index/test2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'content/index/index'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最简单配置，默认 全局静态缓存有效期，不依赖其他路由")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("定义静态缓存规则")]),t._v(" "),a("ul",[a("li",[t._v("路由规则：遵循"),a("code",[t._v("module/controller/action")])]),t._v(" "),a("li",[t._v("expire：过期时间")]),t._v(" "),a("li",[t._v("subscribe： 依赖配置。当依赖的路由缓存失效或更新后，此路由也需要重新更新缓存")])]),t._v(" "),a("h3",{attrs:{id:"_2、controller-必须继承自-cms-class-php或其子类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、controller-必须继承自-cms-class-php或其子类"}},[t._v("#")]),t._v(" 2、Controller 必须继承自 "),a("code",[t._v("Cms.class.php")]),t._v("或其子类")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 正确\nclass MyController extends Base {}\nclass MyController extends AdminBase {}\n\n// 错误\nclass MyController extends Controller {}\n")])])]),a("h2",{attrs:{id:"最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[t._v("#")]),t._v(" 最佳实践")]),t._v(" "),a("ul",[a("li",[t._v("开发调试时，不建议开启缓存")]),t._v(" "),a("li",[t._v("把缓存的驱动改为redis,提升响应速度")]),t._v(" "),a("li",[t._v("不建议一个路由同时处理GET/POST,否则缓存会异常，请保持一个路由一种请求方法")])]),t._v(" "),a("h2",{attrs:{id:"启示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启示"}},[t._v("#")]),t._v(" 启示")]),t._v(" "),a("h3",{attrs:{id:"保存缓存内容时-我们采用serialize而非json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保存缓存内容时-我们采用serialize而非json"}},[t._v("#")]),t._v(" 保存缓存内容时，我们采用serialize而非json")]),t._v(" "),a("p",[t._v("serialize 优点")]),t._v(" "),a("ul",[a("li",[t._v("体积更小")]),t._v(" "),a("li",[t._v("序列化和反序列化性能更优，如下图")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s1.ax1x.com/2020/07/20/UhjrIf.png",alt:"UhjrIf.png"}})]),t._v(" "),a("p",[t._v("参考链接：https://medium.com/@moinuddinchowdhury/serialize-vs-json-67fe872a7755")])])}),[],!1,null,null,null);s.default=e.exports}}]);